@use "sass:math";

.p-rotate-box,
.p-rotate-box--follow,
.rotation,
.rotation--follow,
.move {
  transform-style: preserve-3d;
}

$rotate: 15deg;
.p-rotate-box {
  &__container {
    position: absolute;
    width: 100%;
    height: 500px;
    margin-top: -400px;
    padding: 200px 0 0 35%;
    overflow: hidden;
  }

  transform: rotateX(-$rotate) rotateY(18deg) rotate(-6deg) translate3d(0,0,0);

  &--follow {
    transform: rotateX($rotate) translate3d(0,0,0);
  }
}

$delay: 8000ms;
$move-z: 300px;
.rotation {
  position: absolute;
  animation-name: rotationY;
  animation-delay: $delay;
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  $count: 5;
  $interval: 1;
  $clash-position: 75px;
	@for $s from 1 through $count {
    &:nth-child(#{$s}),
    &:nth-child(#{$s}) &--follow {
      animation-delay: math.div(-$delay, 10) * $interval;
      $interval: $interval + 2;

      @keyframes rotationY {
        0% {
          transform: rotateY(0deg) translateZ($clash-position * $s);
        }
        
        100% {
          transform: rotateY(360deg) translateZ(-$clash-position * $s);
        }
      }
    }
  }
  
  &--follow {
    animation-name: rotationY;
    animation-delay: $delay;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-direction: reverse;
  }
}

.move {
  transform: translateZ($move-z) translate3d(0,0,0);
}

.ball {
  position: relative;

  &.c-ball {
    width: 80px;
    height: 80px;
  }
}