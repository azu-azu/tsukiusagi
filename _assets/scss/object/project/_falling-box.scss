@use "../../foundation/variable" as v;
@use "../../foundation/mixin" as m;
@use "sass:math";

.p-falling-box {
	margin: auto;
	position: relative;
  bottom: 15%;
	left: 35%;
	transform: translateX(-50%);

	@include m.breakpoint(moon-mini) {
		left: 45%;
	}

	div {
		position: absolute;
	}
}


.line-box {
	width: min(13vmin, 80px);
	height: min(13vmin, 80px);
}

$dur: 4s;
$last-sector: 340deg;
.sector {
	top: 50%;
	left: 50%;

	$sectors: 7;
	@for $s from 1 through $sectors {
		&:nth-of-type(#{$s}) {
			transform: rotate(math.div(-360deg, $sectors) * ($s - 1))
				translateY(7.5em);

			.rotate {
				transform: rotate(math.div(360deg, $sectors) * ($s - 1));
			}

			.line-box {
				transform: translateY(-50%)
					rotate(math.div(-360deg, $sectors) * ($s - 1));
			}

			.falling,
			.line-box__line {
				animation-delay: math.div(-$dur, $sectors) * ($s - 1);
			}
		}
	}
	&:last-of-type {
		transform: rotate(-$last-sector) translateY(-17.5em);
		.rotate {
			transform: rotate($last-sector);
		}
	}

	&:nth-of-type(3n) {
		.line-box__line {
			box-shadow: 25px 0 45px rgba(255,255,0, 0.2);
		}
	}
}

.falling {
	animation-name: fall;
	animation-timing-function: ease-in;
}

.falling,
.line-box__line {
	animation-duration: $dur;
	animation-iteration-count: infinite;
}

.line-box__line {
	will-change: transform;
	animation-name: fadeRotate;
	animation-timing-function: linear;
	border-radius: 100%;
	width: 100%;
	height: 100%;
	// background: rgba(255, 255, 255, 0.2);
	// box-shadow: 0 0 30px rgb(255 255 255 / 40%);
  // border-right: 1px solid rgba(255, 255, 0, 0.2);
}


@keyframes fadeRotate {
	0% {
		opacity: 0;
		transform: rotateX(90deg) rotateY(90deg) scale(0);
	}
	50% {
		opacity: 0.9;
		transform: rotateX(0deg);
	}
	60% {
		opacity: 0.3;
		transform: rotateX(0deg);
	}
	100% {
		opacity: 0;
		transform: rotateX(0deg) scale(1);
	}
}

$fallDistance: 30em;
@keyframes fall {
	0%,
	50% {
		transform: translateY(0);
	}
	100% {
		transform: translateY($fallDistance);
	}
}