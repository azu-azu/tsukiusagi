@use "sass:math";

@function randomNum($min, $max) {
  $rand: random();
  $randomNum: $min + floor($rand * (($max - $min) + 1));

  @return $randomNum;
}

:root {
  --planet-anim-duration: 0;
  --planet-anim-delay: 0;
  --planet-color: 0;
  --planet-size: 40px;
}

$width: 1050px;
$height: 400px;
.p-orbit {
	&__container {
		position: absolute;
		width: $width;
		height: $height;
    bottom: 13%;
    left: 50%;
    transform: translateX(-50%);
	}

  position: absolute;
  width: 100%;
	height: 100%;

	@for $i from 1 through 4 {
		&:nth-child(#{$i}) {
			transform: rotate(-#{randomNum(5, 15)}deg) scale(math.div(randomNum(80, 100), 100));
      animation: orbit#{$i} 8s infinite alternate;

      @keyframes orbit#{$i} {
				0% {
					transform: rotate(-#{randomNum(5, 15)}deg) scale(math.div(randomNum(80, 100), 100));
				}
				100% {
					transform: rotate(#{randomNum(20, 35)}deg) scale(math.div(randomNum(80, 100), 100));
				}
			}
		}
	}

	&__path {
		stroke: #979797;
		stroke-width: 1;
		fill: none;
		opacity: 0.45;
	}

	.planet {
		width: var(--planet-size);
		height: var(--planet-size);
		position: absolute;
		top: 0;
		left: 0;
		background-color: var(--planet-color);
		border-radius: 50%;
		offset-path: path('M25,200a487,180 0 1,0 974,0a487,180 0 1,0 -974,0');

		animation: move linear infinite, breathe linear infinite;
		animation-duration: var(--planet-anim-duration), 2s;
		animation-delay: var(--planet-anim-delay);
	}
}


@keyframes move {
	100% {
		offset-distance: 100%;
	}
}



@keyframes breathe {
  0% {
    box-shadow: 0 0 6px var(--planet-color);
  }
  50% {
    box-shadow: 0 0 25px var(--planet-color);
  }
  100% {
    box-shadow: 0 0 6px var(--planet-color);
  }
}
